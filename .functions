_chr(){
    # set variable identifying the chroot you work in (used in the prompt below)
	if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
		debian_chroot=$(cat /etc/debian_chroot)
	fi
	echo "${debian_chroot:+($debian_chroot)}"
}

git_dirty(){

	# stealed from https://github.com/sindresorhus/pure/blob/master/pure.zsh
	command git rev-parse --is-inside-work-tree &>/dev/null || return
	command git diff --quiet --ignore-submodules HEAD &>/dev/null
	(($? == 1)) && echo '*'
}

git_ps1(){
	# I don't like the standard __git_ps1 putput, this is cleaner
	local b="$(git symbolic-ref HEAD 2>/dev/null)";
	[[ -n "$b" ]] && printf " %s" "${b##refs/heads/}";
}

mkd() {
	# Create a new directory and enter it
	mkdir -p "$@" && cd "$@"
}

tre() {
	# `tre` is a shorthand for `tree` with hidden files and color, ignoring
	# the `.git` directory, listing directories first. The output gets piped in
	# `less` with options to preserve color and line numbers, unless the output 
	# is small enough for one screen.
	tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX
}

# bash hooks
PRE_PS1='$(_chr)'
POST_PS1='$(git_ps1)$(git_dirty)'
